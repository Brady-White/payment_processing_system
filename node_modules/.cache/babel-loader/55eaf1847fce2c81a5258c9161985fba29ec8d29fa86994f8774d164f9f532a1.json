{"ast":null,"code":"var _jsxFileName = \"/Users/bradywhite/Desktop/payment_processing_systemj/src/frontend/PaymentForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PaymentForm() {\n  _s();\n  const [amount, setAmount] = useState('');\n  const [paymentStatus, setPaymentStatus] = useState('');\n  const handlePayment = async e => {\n    try {\n      const response = await fetch('/api/checkout', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          amount,\n          paymentMethodId: 'pm_card_visa'\n        })\n      });\n      const data = await response.json();\n      if (data.success) {\n        setPaymentStatus('Payment successful');\n      } else {\n        setPaymentStatus('Payment failed: ${data.error}');\n      }\n    } catch (error) {\n      setPaymentStatus('Error: ${error.message}');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Enter Payment Details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      placeholder: \"Amount\",\n      value: amount,\n      onChange: e => setAmount(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handlePayment,\n      children: \"Pay Now\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), paymentStatus && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: paymentStatus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 31\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n}\n_s(PaymentForm, \"LXEXUd93U/18NzS7xfozlLz/LMY=\");\n_c = PaymentForm;\nexport default PaymentForm;\nvar _c;\n$RefreshReg$(_c, \"PaymentForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","PaymentForm","_s","amount","setAmount","paymentStatus","setPaymentStatus","handlePayment","e","response","fetch","method","headers","body","JSON","stringify","paymentMethodId","data","json","success","error","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","target","onClick","_c","$RefreshReg$"],"sources":["/Users/bradywhite/Desktop/payment_processing_systemj/src/frontend/PaymentForm.js"],"sourcesContent":["import React, {useState} from 'react';\n\nfunction PaymentForm(){\n    const [amount, setAmount]= useState('');\n    const [paymentStatus, setPaymentStatus]=useState('');\n\n    const handlePayment = async (e) => {\n        try{\n            const response = await fetch('/api/checkout',{\n                method: 'POST',\n                headers:{\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({amount, paymentMethodId: 'pm_card_visa'})\n            });\n            const data = await response.json();\n            if(data.success){\n                setPaymentStatus('Payment successful');\n            }else{\n                setPaymentStatus('Payment failed: ${data.error}');\n            }\n        }catch(error){\n            setPaymentStatus('Error: ${error.message}');\n        }\n    };\n    return(\n        <div>\n            <h2>Enter Payment Details</h2>\n            <input\n                type=\"number\"\n                placeholder='Amount'\n                value={amount}\n                onChange={(e) => setAmount(e.target.value)}\n            />\n            <button onClick={handlePayment}>Pay Now</button>\n            {paymentStatus && <p>{paymentStatus}</p>}\n        </div>\n    );\n}\n\nexport default PaymentForm;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,SAASC,WAAWA,CAAA,EAAE;EAAAC,EAAA;EAClB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAEN,QAAQ,CAAC,EAAE,CAAC;EACvC,MAAM,CAACO,aAAa,EAAEC,gBAAgB,CAAC,GAACR,QAAQ,CAAC,EAAE,CAAC;EAEpD,MAAMS,aAAa,GAAG,MAAOC,CAAC,IAAK;IAC/B,IAAG;MACC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,eAAe,EAAC;QACzCC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAC;UACJ,cAAc,EAAE;QACpB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAACZ,MAAM;UAAEa,eAAe,EAAE;QAAc,CAAC;MAClE,CAAC,CAAC;MACF,MAAMC,IAAI,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;MAClC,IAAGD,IAAI,CAACE,OAAO,EAAC;QACZb,gBAAgB,CAAC,oBAAoB,CAAC;MAC1C,CAAC,MAAI;QACDA,gBAAgB,CAAC,+BAA+B,CAAC;MACrD;IACJ,CAAC,QAAMc,KAAK,EAAC;MACTd,gBAAgB,CAAC,yBAAyB,CAAC;IAC/C;EACJ,CAAC;EACD,oBACIN,OAAA;IAAAqB,QAAA,gBACIrB,OAAA;MAAAqB,QAAA,EAAI;IAAqB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC9BzB,OAAA;MACI0B,IAAI,EAAC,QAAQ;MACbC,WAAW,EAAC,QAAQ;MACpBC,KAAK,EAAEzB,MAAO;MACd0B,QAAQ,EAAGrB,CAAC,IAAKJ,SAAS,CAACI,CAAC,CAACsB,MAAM,CAACF,KAAK;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9C,CAAC,eACFzB,OAAA;MAAQ+B,OAAO,EAAExB,aAAc;MAAAc,QAAA,EAAC;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAC/CpB,aAAa,iBAAIL,OAAA;MAAAqB,QAAA,EAAIhB;IAAa;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvC,CAAC;AAEd;AAACvB,EAAA,CApCQD,WAAW;AAAA+B,EAAA,GAAX/B,WAAW;AAsCpB,eAAeA,WAAW;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}